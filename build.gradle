buildscript {
    repositories {
        mavenCentral()
        maven {
            url = uri("https://packages.confluent.io/maven/")
        }
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
        maven {
            url = uri("https://jitpack.io")
        }
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'com.adarshr.test-logger' version '3.2.0'
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id "com.google.protobuf" version "0.9.3"
    id 'java'
    id 'idea'
    id 'eclipse'
}

group = 'io.confluent.developer'
version = '1.0-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
    maven {
        url = uri("https://packages.confluent.io/maven/")
    }

    maven {
        url = uri("https://jitpack.io")
    }
}

apply plugin: "com.github.johnrengelman.shadow"

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.kafka:spring-kafka'

    implementation 'io.github.lognet:grpc-spring-boot-starter:5.1.3'
    implementation 'com.google.protobuf:protobuf-java:3.23.4'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4'
    implementation 'com.jayway.jsonpath:json-path:2.8.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.19.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.19.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.19.0'
    implementation 'com.google.protobuf:protobuf-java-util:3.23.4'
    implementation 'net.datafaker:datafaker:2.0.1'

    implementation('org.apache.kafka:kafka-streams:3.5.1') {
        exclude group: 'org.apache.kafka', module: 'kafka-clients'
    }
    implementation('org.apache.kafka:kafka-clients:3.5.1')

    testImplementation "org.testcontainers:kafka:1.17.4"
    testImplementation "org.testcontainers:testcontainers:1.17.4"
    testImplementation(platform('org.junit:junit-bom:5.9.0'))
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'io.grpc:grpc-testing:1.57.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.2'
    testImplementation 'org.apache.kafka:kafka-streams-test-utils:3.5.1'
    testImplementation 'org.testcontainers:junit-jupiter:1.17.4'
    testImplementation 'org.mockito:mockito-core:4.8.0'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'org.openjdk.jmh:jmh-core:1.37'
    testImplementation 'org.openjdk.jmh:jmh-generator-annprocess:1.37'
    
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.23.4'
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.56.1'
        }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
                "Class-Path": configurations.compileClasspath.collect { it.getName() }.join(" "),
                "Main-Class": "io.confluent.developer.KafkaStreamsInteractiveQueriesApp"
        )
    }
}
shadowJar {
    archiveBaseName.set('kafka-streams-iq-app')
    archiveClassifier.set('')
    archiveVersion.set('')
}

